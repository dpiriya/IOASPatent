@model IEnumerable<IOAS.Models.PaymentBreakUpDetailModel>
<div class="row">
    <div class="col-md-12 mb-lg">
        <table class="table alter-table">
            <thead>
                <tr>

                    <th style="width:150px;">Category</th>
                    <th>Name</th>
                    <th>Mode of payment</th>
                    <th>Payment Amount</th>
                    <th></th>

                </tr>
            </thead>
            <tbody id="tbodyPaymentBU">
                @if (Model.Count() > 0)
                {
                    var count = 0;
                    foreach (var item in Model)
                    {
                        var catId = "PaymentBreakDetail[" + count + "].CategoryId";
                        var uId = "PaymentBreakDetail[" + count + "].UserId";
                        var name = "PaymentBreakDetail[" + count + "].Name";
                        var mode = "PaymentBreakDetail[" + count + "].ModeOfPayment";
                        var pAmt = "PaymentBreakDetail[" + count + "].PaymentAmount";
                        var detId = "PaymentBreakDetail[" + count + "].PaymentBreakUpDetailId";
                        var autoComp = "PaymentBreakDetail[" + count + "].autoComplete";
                        <tr>
                            <td>
                                @Html.DropDownList(@catId, new SelectList(ViewBag.PayerCategoryList, "id", "name",item.CategoryId), "Select any", new { @class = "form-control required" })
                                @Html.ValidationMessage(@catId)
                                @Html.Hidden("PaymentBreakDetail.Index", @count)
                                @Html.Hidden(@detId, item.PaymentBreakUpDetailId)
                            </td>
                            <td class="tdDDLUser">
                                @Html.TextBox(@autoComp, item.Name, new { @class = "form-control" })
                                @Html.TextBox(@uId, item.UserId, new { @class = "form-control dis-none" })
                                @*<input name="@autoComp" value="@item.Name" class="form-control" />                                
                                <input name="@uId" value="@item.UserId" class="form-control dis-none" />*@                               
                                @Html.ValidationMessage(@uId)
                            </td>
                            <td class="tdTxtName dis-none">
                                @Html.TextBox(@name, item.Name, new { @class = "form-control" })
                                @Html.ValidationMessage(@name)
                            </td>
                            <td>
                                @Html.DropDownList(@mode, new SelectList(ViewBag.ModeOfPaymentList, "id", "name",item.ModeOfPayment), "Select any", new { @class = "form-control required" })
                                @Html.ValidationMessage(@mode)
                            </td>
                            <td>
                                @Html.TextBox(@pAmt, item.PaymentAmount, new { @class = "form-control required", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculatePaymentBUTotal()" })
                                @Html.ValidationMessage(@pAmt)
                            </td>
                            <td>
                                <a href="javascript:void(0)" class="btn-sm btn btn-danger removePaymentBUDetail"><i class="ion-android-close"></i></a>
                            </td>
                        </tr>
                        @*<script type="text/javascript">
                            paymentCategoryChange($('select[name="'+ @catId+'"]'));
                        </script>*@
                        count++;
                    }

                }
                else
                {
                    <tr>
                        <td>
                            @Html.DropDownList("PaymentBreakDetail[0].CategoryId", new SelectList(ViewBag.PayerCategoryList, "id", "name"), "Select any", new { @class = "form-control required" })
                            @Html.ValidationMessage("PaymentBreakDetail[0].CategoryId")
                            @Html.Hidden("PaymentBreakDetail.Index", 0)
                        </td>
                        <td class="tdDDLUser">
                            @Html.TextBox("PaymentBreakDetail[0].autoComplete", "", new { @class = "form-control" })
                            @Html.TextBox("PaymentBreakDetail[0].UserId", "", new { @class = "form-control dis-none" })
                            @*<input name="PaymentBreakDetail[0].autoComplete" class="form-control" />
                            <input name="PaymentBreakDetail[0].UserId"  class="form-control dis-none" />*@
                            @Html.ValidationMessage("PaymentBreakDetail[0].UserId")
                        </td>
                        <td class="tdTxtName dis-none">
                            @Html.TextBox("PaymentBreakDetail[0].Name", "", new { @class = "form-control" })
                            @Html.ValidationMessage("PaymentBreakDetail[0].Name")
                        </td>
                        <td>
                            @Html.DropDownList("PaymentBreakDetail[0].ModeOfPayment", new SelectList(ViewBag.ModeOfPaymentList, "id", "name"), "Select any", new { @class = "form-control required" })
                            @Html.ValidationMessage("PaymentBreakDetail[0].ModeOfPayment")
                        </td>
                        <td>
                            @Html.TextBox("PaymentBreakDetail[0].PaymentAmount", "", new { @class = "form-control required", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculatePaymentBUTotal()" })
                            @Html.ValidationMessage("PaymentBreakDetail[0].PaymentAmount")
                        </td>
                        <td>
                            <a href="javascript:void(0)" class="btn-sm btn btn-danger removePaymentBUDetail"><i class="ion-android-close"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="col-md-6 mt-md">
            <a href="javascript:void(0)" id="btnAddPaymentBU" class="btn btn-primary">Add New</a>
        </div>
    </div>
</div>
<div class="row">
    <div id="divPaymentTDSAmount" class="col-md-4 col-md-offset-8">
        <div class="form-group custom-form-group ">
            <label>TDS Value :</label>
            @Html.TextBox("PaymentTDSAmount", (string)ViewBag.paymentTDSAmount, new { @class = "form-control", @autocomplete = "off" })
            @Html.ValidationMessage("PaymentTDSAmount")
        </div>
    </div>
    <div class="col-md-4 col-md-offset-8">
        <div class="form-group custom-form-group ">
            <label>Total Value :</label>
            @Html.TextBox("PaymentBUTotal", "", new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" })
            @Html.ValidationMessage("PaymentBUTotal")
        </div>
    </div>
</div>
<script type="text/javascript">

    $(document).on('change', '#tbodyPaymentBU select[name$=".CategoryId"]', function () {
        paymentCategoryChange($(this));
    });
    $('#tbodyPaymentBU').find('select[name$=".CategoryId"]').each(function () {
        paymentCategoryChange($(this),'U');
    });
    $(document).on('click', 'a.removePaymentBUDetail', function () {
        if ($('#tbodyPaymentBU tr').length != 1)
        {
            $(this).closest('tr').remove();
            CalculatePaymentBUTotal();
        }
    });
    $("#PaymentTDSAmount").blur(function () {
        CalculatePaymentBUTotal();
    });
    $("#btnAddPaymentBU").click(function () {
        var cln = $('#tbodyPaymentBU tr:first').clone().find("select,input").val("").end();
        var index = $('#tbodyPaymentBU tr:last').find("input[name='PaymentBreakDetail.Index']").val();
        index = parseInt(index) + 1;
        $(cln).find("input[name='PaymentBreakDetail.Index']").val(index);
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
            $(this).attr("id", $(this).attr("id").replace(/\d+/, index));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, index));
        });
        $('#tbodyPaymentBU').append(cln);
    });
    function CalculatePaymentBUTotal() {
        var amt = 0;
        $('#tbodyPaymentBU input[name$="PaymentAmount"]').each(function () {
            amt = amt + (parseFloat($(this).val()) || 0);
        });
        amt = amt + (parseFloat($('#PaymentTDSAmount').val()) || 0);
        $('#PaymentBUTotal').val(amt);
    }
    function EmptyPaymentBU() {
        $('#tbodyPaymentBU tr').not(':first').remove();
        $('#tbodyPaymentBU tr').find("input[name!='PaymentBreakDetail.Index'],select").val("");
    }
</script>