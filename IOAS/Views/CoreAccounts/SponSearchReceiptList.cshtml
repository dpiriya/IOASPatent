@model IOAS.Models.ReceiptListModel
<div class="page-wrapper">
    
            
            <div class="">
                <div class="">
                    <div class="col-md-12 mt-null mb-lg">
                        <table class="table alter-table">
                            <thead>
                                <tr>
                                    <th>S.No</th>
                                    <th>Receipt Number</th>
                                    <th>Receipt Date</th>
                                    <th>Project Number</th>
                                    <th>Project Title</th>
                                    <th>Invoice Value</th>
                                    <th>Receipt Value</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.SearchResult != null && Model.SearchResult.Data.Any())
                                {
                                    var sno = Model.SearchResult.CurrentPage == 1 ? 1 : ((Model.SearchResult.CurrentPage - 1) * Model.SearchResult.pageSize) + 1;
                                    foreach (var item in Model.SearchResult.Data)
                                    {
                                            <tr>
                                                <td>
                                                    @sno &nbsp; &nbsp;
                                                    @{ sno = sno + 1;
                                                    }
                                                </td>
                                                <td>@Html.DisplayFor(m => item.ReceiptNumber, new { @class = "form-control", @id = "txtPreviousReceiptnumber", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.ReceiptDate, new { @class = "form-control", @id = "txtPreviousReceiptdate", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.ProjectNumber, new { @class = "form-control", @align = "right", @id = "txtReceiptvalue", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.ProjectTitle, new { @class = "form-control", @id = "txtPreviousReceiptnumber", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.InvoiceValue, new { @class = "form-control", @id = "txtInvoice", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.TotalReceiptValue, new { @class = "form-control", @id = "txtPreviousReceiptvalue", @readonly = true })</td>
                                                <td>@Html.DisplayFor(m => item.ReceiptStatus, new { @class = "form-control", @id = "txtReceiptStatus", @readonly = true })</td>
                                                <td>@{
                                                    //var btnView = "btnView_" + item.ReceiptId;
                                                    var btnEdit = "btnEdit_" + item.ReceiptId;
                                                }
                                                <span>                                                   
                                                    @*<a id="@btnView" href="javascript:void(0)" class="view-mr-btn"> <i class="ion-more"></i> </a>*@
                                                    <a id="@btnEdit" href="javascript:void(0)" class="view-mr-btn"> <i class="ion-edit"></i> </a>
                                                </span>  </td>
                                            </tr>
                                      }
                                    }
                            </tbody>
                        </table>
                        
                    </div>
                </div>
            </div>

                                            <div class="col-md-12 mb-lg">
@if (Model.SearchResult != null)
{
                                                {
                                                    var maxpage = Model.SearchResult.visiblePages;
                                                    var startpage = 1;

                                                    if (Model.SearchResult.TotalPages < Model.SearchResult.visiblePages)
                                                    {
                                                        startpage = 1;
                                                        maxpage = Model.SearchResult.TotalPages;
                                                    }
                                                    else if (Model.SearchResult.CurrentPage >= maxpage)
                                                    {
                                                        startpage = Model.SearchResult.CurrentPage;

                                                        if (startpage + Model.SearchResult.visiblePages <= Model.SearchResult.TotalPages)
                                                        {
                                                            maxpage = startpage + Model.SearchResult.visiblePages;
                                                        }
                                                        else
                                                        {
                                                            maxpage = Model.SearchResult.TotalPages;
                                                        }

                                                        if (maxpage > Model.SearchResult.TotalPages)
                                                        {
                                                            maxpage = Model.SearchResult.TotalPages;
                                                            startpage = maxpage - (Model.SearchResult.visiblePages - 1);
                                                        }

                                                    }

                                                    if (Model.SearchResult.TotalPages > Model.SearchResult.visiblePages)
                                                    {
                                                        <a id='firstPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">
                                                            First
                                                        </a>
                                                        <a id='previousPage' name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">
                                                            Previous
                                                        </a>
                                                    }

                                                    for (int i = startpage; i <= maxpage; i++)
                                                    {


                                                        if (i == Model.SearchResult.CurrentPage)
                                                        {
                                                            if (Model.SearchResult.TotalPages > 1)
                                                            {
                                                                <a id='currentPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">@i</a>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <a name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">@i</a>
                                                        }
                                                    }
                                                    if (Model.SearchResult.TotalPages > Model.SearchResult.visiblePages)
                                                    {
                                                        <a id='nextPage' name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">
                                                            Next
                                                        </a>
                                                        <a id='lastPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">
                                                            Last
                                                        </a>
                                                    }
                                                    if (Model.SearchResult.TotalPages > 1)
                                                    {
                                                        <h6 class="color-white" style="float: right; color: Red;">
                                                            Displaying page <span>@Model.SearchResult.CurrentPage</span> of <span>
                                                                @Model.SearchResult.TotalPages
                                                            </span>
                                                        </h6>
                                                    }
                                                }
    }
                                            </div>
                                                    
</div>

<script type="text/javascript">

    var lastpage = '@Model.SearchResult.TotalPages';
    @*$('[id^="btnView_"]').click(function () {
        var ID = $(this).attr("id");
        ID = ID.substr(ID.lastIndexOf("_") + 1);
        var searchdata = { "SRBId": ID };
        $.ajax({
            url: '@Url.Action("PopupSRBDetails", "Facility")',
            type: 'POST',
            contentType: "application/x-www-form-urlencoded",
            data: searchdata,
            success: function (data) {
                $('#DivContent_' + ID).append(data);
            }
        });
    });*@
    $('[id^="btnEdit_"]').click(function () {
        var ID = $(this).attr("id");
        ID = ID.substr(ID.lastIndexOf("_") + 1);
        var url = '@Url.Action("EditProjectReceipt", "CoreAccounts")?ReceiptId=' + ID;        
        window.location.href = url;
    });
    $(window).click(function (e) {
        $('Div').remove(".popup-dts")
    });
    $(document).ready(function () {
        var firstpage = 1
        var currentPage = $('#currentPage').text();
        if (parseInt(currentPage, 10) === parseInt(lastpage, 10)) {
            $('#lastPage').addClass('disabled');
            $('#nextPage').addClass('disabled');
        }
        else if (parseInt(currentPage, 10) === parseInt(firstpage, 10)) {
            $('#firstPage').addClass('disabled');
            $('#previousPage').addClass('disabled');
        }
    });

    $('a[name="pageButton"]').click(function () {
        var pageNo = $(this).text();

        if ($(this).text().trim() === 'First') {
            pageNo = 1;
        }
        else if ($(this).text().trim() === 'Last') {
            pageNo = lastpage;
        }
        else if ($(this).text().trim() === 'Previous') {
            if (parseInt($('#currentPage').text(), 10) > 1) {
                pageNo = parseInt($('#currentPage').text(), 10) - 1;
            }

        }
        else if ($(this).text().trim() === 'Next') {

            pageNo = parseInt($('#currentPage').text(), 10) + 1;
        }
        else {
            pageNo = $(this).text();
        }
        getData(pageNo)
    });
</script>