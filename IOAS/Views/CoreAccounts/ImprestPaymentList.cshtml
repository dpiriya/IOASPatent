@model IOAS.Models.ImprestPaymentModel
@{
    ViewBag.Title = "Imprest Master";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

<style>
    /* Hide all steps by default: */
    .tab {
        display: none;
        background: #fff;
        float: left;
    }
  
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #fff;
        }

    .custom-nav-pills.nav-pills > li > a {
        color: rgba(255,255,255,0.5);
        cursor: default;
        background: transparent !important;
        border-color: transparent;
        border-top-color: transparent;
        padding: 10px 15px;
        margin: 0px 15px;
    }

        .custom-nav-pills.nav-pills > li > a span {
            width: 100%;
            float: left;
        }

    .custom-nav-pills.nav-pills > li.active > a, .custom-nav-pills.nav-pills > li.active > a:focus, .custom-nav-pills.nav-pills > li.active > a:hover {
        color: #333333;
        background-color: #fff !important;
    }

    .custom-st-fd-box {
        background: #f5f5f5;
        padding: 15px 0px;
        border-radius: 4px;
        display: inline-block;
    }

    .custom-st-fd-btn {
        color: #fff;
        font-size: 16px;
        margin-top: 15px;
        display: inline-block;
    }

    .custom-st-tb-th.table {
        border: 0px;
    }

        .custom-st-tb-th.table > tbody > tr > th {
            background: #3080e3;
            color: #fff;
            border: 0px solid #ccc;
        }

        .custom-st-tb-th.table > tbody > tr > td {
            border: 0px;
        }
</style>
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>Imprest Master</h3>
    </div>
    @*<div class="col-md-4">
            <div class="search-btn">
                <input type="text" value="" placeholder="Search" class="form-control">
                <a href="#" id="btnsearch" class="btn"> <i class="ion-search"></i></a>
            </div>

        </div>*@
    <div id="addnewpage" class="col-md-8 flt-nav-links">

        <a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
        @*<a href="#" id="btnaddnew" data-toggle="modal" data-target="#AddNewEntryModel"> <i class="ion-plus"></i>Add New</a>*@
        <a href="@Url.Action("ImprestPayment")"> <i class="ion-plus"></i>Add New</a>

    </div>
</div>

                        <div id="popupFilter" class="filter-popup">
                            <div class="">
                                <div class="filter-content">
                                    <div class="white-bg">
                                        <div class="form-group custom-form-group">
                                            <h3>Filter by</h3>
                                        </div>

                                        @*<div class="form-group custom-form-group">
                                            @Html.TextBoxFor(m => m.SearchField.ProjectNumber, new { @id = "srchprojectnumber", @placeholder = "Project Number", @class = "form-control" })
                                        </div>*@

                                        <div class="form-group custom-form-group">
                                            @Html.TextBoxFor(m => m.SearchField.ImprestcardNumber, new { @id = "srchcardnumber", @placeholder = "Imprest Card Number", @class = "form-control" })
                                        </div>
                                        <div class="form-group custom-form-group">
                                            @Html.TextBoxFor(m => m.SearchField.ImprestacNumber, new { @id = "srchacnumber", @placeholder = "Imprest A/C Number", @class = "form-control" })
                                        </div>
                                        <div class="form-group custom-form-group">
                                            @Html.TextBoxFor(m => m.SearchField.ImprestrefernceNumber, new { @id = "srchrefnumber", @placeholder = "Imprest Reference Number", @class = "form-control" })
                                        </div>
                                        <div class="form-group custom-form-group">
                                            @Html.TextBoxFor(m => m.SearchField.PIName, new { @id = "srchPIName", @placeholder = "PI Name / ID", @class = "form-control" })
                                            @*@Html.DropDownListFor(m => m.SearchField.PIName, new SelectList(ViewBag.PI, "id", "name"), "PI Name", new { @id = "srchPIName", @class = "form-control" })*@
                                        </div>

                                        <div id="DivCrtdDate" class="form-group custom-form-group">
                                            <label class="full-width">Created Date</label>
                                            <label class="half-form">From Date </label>
                                            @Html.TextBoxFor(m => m.SearchField.EntryFromDate, new { @id = "FromDate", @class = "form-control half-form" })
                                            <label class="half-form">To Date </label>
                                            @Html.TextBoxFor(m => m.SearchField.EntryToDate, new { @id = "ToDate", @class = "form-control half-form" })
                                        </div>
                                        <div class="form-group custom-form-group mt30 text-center">
                                            <a id="btnReset" href="javascript:void(0)">Reset</a>
                                        </div>
                                        <div class="form-group custom-form-group mt30 text-center">
                                            <button id="btnSearch" type="button" class="btn btn-primary mr10">Search</button>
                                            <button name="btnClose" type="button" class="btn btn-default">Close</button>
                                        </div>

                                    </div>
                                </div>

                            </div>

                            <a href="javascript:void(0)" name="btnClose" class="close-btn"><i class="ion-android-cancel"></i></a>

                        </div>
                        <div class="row mt30" id="gridlist">

                            <div class="col-md-12">
                                <div class="page-wrapper">
                                    <div class="custom-jsgrid-normal">
                                        <div id="gridImprestList"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="row mt30" id="gridproject">
                            <div id="AddNewEntryModel" class="modal fade" role="dialog">
                                <div class="modal-dialog wdth80">

                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("ImprestPaymentList", "CoreAccounts")';">&times;</button>
                                            <h3 class="modal-title">Select Project</h3>
                                        </div>
                                        <div class="modal-body">

                                             Modal content
                                            <div class="col-md-12">
                                                <div class="col-md-4">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">PI</label>
                                                        @Html.DropDownListFor(m => m.PIId, new SelectList(ViewBag.PIName, "id", "name"), "Select PI", new { @class = "form-control selectpicker", @id = "txtSelectPI" })
                                                        <div> @Html.ValidationMessageFor(m => m.PIId)</div>
                                                    </div>
                                                </div>
                                                <div class="col-md-8">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required"> Project </label>
                                                        @Html.DropDownListFor(m => m.SelectProject, new SelectList(ViewBag.Project, "id", "name"), "Select Project", new { @id = "txtSelectProject", @class = "form-control selectpicker" })
                                                        @Html.ValidationMessageFor(m => m.SelectProject)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-primary mt10" data-dismiss="modal" id="btnselectproject">Ok</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>*@
             @if (ViewBag.succMsg != null)
                {
                            <div id="myModal" class="modal fade modal-success" role="dialog">
                                <div class="modal-dialog modal-sm">

                                    <!-- Modal content-->
                                    <div class="modal-content">

                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("SBIECard", "CoreAccounts")';">&times;</button>
                                            <i class="ion-android-checkmark-circle"></i>
                                            <h3 class="modal-title">Saved successfully</h3>
                                        </div>
                                        <div class="modal-body">

                                            <p>@ViewBag.succMsg</p>

                                        </div>

                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("SBIECard", "CoreAccounts")';">Close</button>
                                        </div>

                                    </div>

                                </div>
                            </div>

                            <script>
                                $(document).ready(function () {
                                    $('#myModal').modal('show');
                                });

                            </script>

                        }

                        <div id="ValidationModal" class="modal fade modal-warning" role="dialog">
                            <div class="modal-dialog modal-sm">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        <i class="ion-android-warning"></i>
                                        <h3 class="modal-title">Warning</h3>
                                    </div>
                                    <div class="modal-body">

                                        <p id="MsgValidation"></p>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <script>
                            var errMsg = '@ViewBag.errMsg';
                            var piList = '@Html.Raw(Json.Encode(ViewBag.PI))';
                            var allocationHeads = '@Html.Raw(Json.Encode(ViewBag.allocatehead))'
                            @*var modelData = '@Html.Raw(Json.Encode(Model))'*@
                            $(document).ready(function () {
                                //get the relevant form
                                //  var form = $('#frmSRB');
                                $('.selectpicker').selectpicker({
                                    liveSearch: true
                                });
                                $('.selectpicker').selectpicker('refresh');
                                if (errMsg) {
                                    $('#FailedAlert').html(errMsg);
                                    $('#Failed').modal('toggle');
                                    var jsonData = JSON.parse(modelData);
                                    $('#addnewpage').hide();
                                    $('#SBIPrepaidECard').show();
                                    $('#gridlist').hide();
                                    $('#viewdoc').hide();
                                    fillData(jsonData);

                                } else {
                                    $('#SBIPrepaidECard').hide();
                                    $('#viewdoc').hide();
                                }
                            });

                            $("#FromDate, #ToDate, #txtDateofbirth, #txtEDateofbirth").datepicker
                                      ({
                                          dateFormat: 'dd-MM-yy',
                                          showStatus: true,
                                          showWeeks: true,
                                          changeYear: true,
                                          yearRange: '-100:+0',
                                          highlightWeek: true,
                                          numberOfMonths: 1,
                                          showAnim: "scale",
                                          showOptions: {
                                              origin: ["top", "left"]
                                          }
                                      });

                            $('a[name="btnClose"],button[name="btnClose"]').click(function () {
                                $('#popupFilter').css("display", "none");
                            });
                            $("#btnFilter").click(function () {
                                $('#popupFilter').css("display", "Block");
                            });

                            function ResetForm() {
                                //$('#srchprojectnumber').val('');
                                $('#srchcardnumber').val('');
                                $('#srchacnumber').val('');
                                $('#srchrefnumber').val('');
                                $('#srchPIName').val('');
                                $('#FromDate').val('');
                                $('#ToDate').val('');
                            }
                            $('#btnReset').click(function () {
                                ResetForm();
                                getData(1);
                            });
                            $('#btnSearch').on('click', function () {
                                // var token = $("input[name=__RequestVerificationToken]").val();
                                getData(1);
                            });
                            var searchCardURL = 'SearchImprestPaymentList';
                            function getData(page) {
                                //var Projectnumber = $('#srchprojectnumber').val();
                                var Cardnumber = $('#srchcardnumber').val();
                                var Referencenumber = $('#srchrefnumber').val();
                                var ImprestAcnumber = $('#srchacnumber').val();
                                var PIName = $('#srchPIName').val();
                                //  var SearchBy = $('input[name^="SearchField.SearchBy"]:checked').val();
                                var FromDate = $('#FromDate').val();
                                var ToDate = $('#ToDate').val();

                                //if (Projectnumber == "") {
                                //    Projectnumber = null;
                                //}
                                if (Cardnumber == "") {
                                    Cardnumber = null;
                                }
                                if (Referencenumber == "") {
                                    Referencenumber = null;
                                }
                                if (ImprestAcnumber == "") {
                                    ImprestAcnumber = null;
                                }
                                if (PIName == "") {
                                    PIName = null;
                                }
                                if (FromDate == "") {
                                    FromDate = null;
                                }
                                if (ToDate == "") {
                                    ToDate = null;
                                }
                                //  var searchdata = { "__RequestVerificationToken": token, "ProjectType": Projecttype,"ProposalNumber": Proposalnumber, "PIname": PIName, "Searchby": SearchBy, "FromSOdate": FromSODate, "ToSOdate": ToSODate, "Fromdate": FromDate, "Todate": ToDate };
                                var searchdata = {
                                    //ProjectNumber: Projectnumber,
                                    ImprestcardNumber: Cardnumber,
                                    ImprestNumber: Referencenumber,
                                    ImprestBankACNumber: ImprestAcnumber,
                                    EntryFromDate: FromDate,
                                    EntryToDate: ToDate,
                                    PIName: PIName,
                                };

                                $.ajax({
                                    type: "GET",
                                    url: searchCardURL,
                                    data: searchdata,
                                    //data: { "ProjectType": Projecttype, "ProposalNumber": Proposalnumber, "FromSOdate": FromSODate, "ToSOdate": ToSODate, },
                                    //contentType: "application/x-www-form-urlencoded",
                                    dataType: "json",
                                    success: function (result) {
                                        // dataProposal = result;
                                        $("#gridImprestList").jsGrid({ data: result });
                                        $('#gridlist').show();
                                     //   $('#popupFilter').hide();
                                    },
                                    error: function (err) {
                                        console.log("error : " + err);
                                    }
                                });
                            }


                            function parseDate(s) {
                                var months = {
                                    january: 0, february: 1, march: 2, april: 3, may: 4, june: 5,
                                    july: 6, august: 7, september: 8, october: 9, november: 10, december: 11
                                };
                                var p = s.split('-');
                                return new Date(p[2], months[p[1].toLowerCase()], p[0]);
                            }

                            function isNumberKey(evt) {
                                var charCode = (evt.which) ? evt.which : evt.keyCode;
                                if (charCode != 46 && charCode > 31
                                  && (charCode < 48 || charCode > 57))
                                    return false;

                                return true;
                            }
                            function noedit() {
                                return false;
                            }


                            function ValidateNumberOnly(e) {
                                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                                    return false;
                                }
                            }
                            function ValidateDecimalOnly(evt) {
                                var charCode = (evt.which) ? evt.which : evt.keyCode;
                                if (charCode != 46 && charCode > 31
                                  && (charCode < 48 || charCode > 57))
                                    return false;

                                return true;
                            }

                            $("#txtSelectPI").change(function () {
                                var PIID = $(this).val();
                                $.getJSON("@Url.Action("LoadProject", "CoreAccounts")", { PIUserId: PIID },
                                            function (locationdata) {
                                                var select = $("#txtSelectProject");
                                                select.empty();

                                                $.each(locationdata, function (index, itemData) {

                                                    select.append($('<option/>', {
                                                        value: itemData.id,
                                                        text: itemData.name

                                                    }));
                                                });
                                                select.selectpicker('refresh');
                                            });

                            });
                            var DateField = function (config) {
                                jsGrid.Field.call(this, config);
                            };

                            DateField.prototype = new jsGrid.Field({
                                sorter: function (date1, date2) {
                                    return new Date(date1) - new Date(date2);
                                },

                                itemTemplate: function (value) {
                                    return new Date(value).toDateString();
                                },

                                filterTemplate: function () {
                                    var now = new Date();
                                    this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
                                    this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
                                    return $("<div>").append(this._fromPicker).append(this._toPicker);
                                },

                                insertTemplate: function (value) {
                                    return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
                                },

                                editTemplate: function (value) {
                                    return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
                                },

                                insertValue: function () {
                                    return this._insertPicker.datepicker("getDate").toISOString();
                                },

                                editValue: function () {
                                    return this._editPicker.datepicker("getDate").toISOString();
                                },

                                filterValue: function () {
                                    return {
                                        from: this._fromPicker.datepicker("getDate"),
                                        to: this._toPicker.datepicker("getDate")
                                    };
                                }
                            });
                            jsGrid.fields.date = DateField;
                            var db;
                            $("#gridImprestList").jsGrid({
                                paging: true,
                                pageIndex: 1,
                                pageSize: 5,
                                editing: false,
                                filtering: true,
                                controller: {

                                    loadData: function (filter) {
                                        return $.grep(db, function (ow) {
                                            return (!filter.ImprestcardNumber || ow.ImprestcardNumber.toLowerCase().indexOf(filter.ImprestcardNumber.toLowerCase()) > -1)
                                            && (!filter.ImprestNumber || ow.ImprestNumber.toLowerCase().indexOf(filter.ImprestNumber.toLowerCase()) > -1)
                                            && (!filter.NameofPI || ow.NameofPI.toLowerCase().indexOf(filter.NameofPI.toLowerCase()) > -1)
                                            && (!filter.Status || ow.Status.toLowerCase().indexOf(filter.Status.toLowerCase()) > -1)
                                           //&& (!filter.RequestedDate.from || new Date(ow.RequestedDate) >= filter.RequestedDate.from)
                                           //&& (!filter.RequestedDate.to || new Date(ow.RequestedDate) <= filter.RequestedDate.to);
                                        });
                                    }

                                },

                                fields: [
                                    { name: "Sno", title: "S.No", editing: false, width: 10 },
                                    { type: "number", name: "ImprestProjectDetailsId", title: "Id", visible: false, align: "left" },
                                    { type: "number", name: "PIId", title: "PI Id", visible: false, align: "left" },
                                    //{ type: "number", name: "ProjectNumber", title: "Project Number", align: "left", width: 70 },
                                    { type: "number", name: "ImprestcardId", title: "Imprest Card Id", visible: false, editing: false },
                                    //{ type: "text", name: "Projecttitle", title: "Project title", editing: false, align: "left", width: 70 },                                   
                                    { type: "text", name: "ImprestNumber", title: "Imprest Reference Number", editing: false, align: "left", width: 70 },
                                    { type: "text", name: "ImprestBankACNumber", title: "Imprest A/C Number", editing: false, align: "left", width: 80 },
                                    { type: "text", name: "ImprestcardNumber", title: "Imprest Card Number", editing: false, align: "left", width: 70 },                                    
                                   // { name: "RequestedDate", title: "Requested Date", type: "date", align: "left", width: 70 },
                                    { type: "text", name: "NameofPI", title: "Name of PI", editing: false, width: 80 },
                                    { name: "TotalValueofCard", title: "Imprest Value", editing: false, align: "left", width: 50 },
                                    { type: "text", name: "Status", title: "Status", editing: false, align: "left", width: 60 },
                                    { name: "IsRecoupmentpending", title: "IsRecoupmentPending", visible: false, editing: false, width: "35px" },
                                     {
                                         type: "control", editButton: false, deleteButton: false, title: "Action", width: 70,
                                         itemTemplate: function (value, item) {
                                             var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                                             //if (item.Status == "Open") {
                                             //    statusList = [{ id: "", name: "Select Action" }, { id: "Approve", name: "Approve" }, { id: "View", name: "View" }]
                                             //}
                                             if (item.Status == "Open") {
                                                 statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }, { id: "Approve", name: "Approve" }, { id: "View", name: "View" }]
                                             }
                                             else if (item.Status == "Approved") {
                                                 statusList = [{ id: "", name: "Select Action" }, { id: "Enhance", name: "Enhance" }, { id: "Book Bills", name: "Book Bills" }, { id: "View", name: "View" }]
                                             }
                                             else
                                             {
                                                 statusList = [{ id: "", name: "Select Action" },{ id: "View", name: "View" }]
                                             }
                                             var $customSelect = $("<select>")
                                                 .attr("class", "form-control").prop("selectedIndex", "")
                    
                                             $.each(statusList, function (index, itemData) {
                                                 $customSelect.append($('<option/>', {
                             
                                                     value: itemData.id,
                                                     text: itemData.name
                                                 }));
                                             });

                                             $customSelect.change(function (e) {
                                                 var selVal = $(this).val();
                                                
                                             if (selVal == "Edit") {
                                                 var url = '@Url.Action("ImprestPayment", "CoreAccounts")?PIID=' + item.PIId + '&ImpID=' + item.ImprestcardId;
                                                     window.location.href = url;
                                             }
                                             else if (selVal == "Enhance") {
                                                 var url = '@Url.Action("ImprestEnhancement", "CoreAccounts")?PIID=' + item.PIId;
                                                 window.location.href = url;
                                             }
                                             else if (selVal == "Book Bills") {
                                                 var url = '@Url.Action("ImprestPaymentRecoupment", "CoreAccounts")?ImprestCardId=' + item.ImprestcardId;
                                                 window.location.href = url;
                                             }
                                             else if (selVal == "Approve") {
                                                 debugger;
                                                 var approveurl = 'ImprestPaymentProjectApprove';
                                                 var choice = confirm("Are you sure, Do you want to submit this Imprest for approval process?");
                                                 if (choice === true) {
                                                   
                                                     $.ajax({
                                                         type: "GET",
                                                         url: approveurl,
                                                         data: { prjctdetailsid: item.ImprestcardId },
                                                         contentType: "application/json; charset=utf-8",
                                                         success: function (result) {
                                                             debugger;
                                                             if (result.status == true) {
                                                                 $('#alertSuccess').html("Imprest has been approved successfully.");
                                                                 $('#Success').modal('toggle');
                                                                 loadDetails();
                                                             } else if (result.status == false) {
                                                                 $('#FailedAlert').html("Something went wrong please contact administrator");
                                                                 $('#Failed').modal('toggle');
                                                             }
                                                         },
                                                         error: function (err) {
                                                             console.log("error1 : " + err);
                                                         }
                                                     });
                                                     var getImprestCardList = 'LoadImprestPaymentList'
                                                     $.ajax({
                                                         type: "GET",
                                                         url: getImprestCardList,
                                                         data: param = "",
                                                         contentType: "application/json; charset=utf-8",
                                                         success: function (result) {
                                                             // dataProposal = result;
                                                             $("#gridImprestList").jsGrid({ data: result });
                                                             $('#gridlist').show();
                                                             $('#addnewpage').show();
                                                         },
                                                         error: function (err) {
                                                             console.log("error : " + err);
                                                         }
                                                     });
                                                 }
                                             }
                                             else if (selVal == "View") {
                                                 var url = '@Url.Action("ImprestPaymentView", "CoreAccounts")?PIID=' + item.PIId + '&ImpID=' + item.ImprestcardId;
                                                 window.location.href = url;
                                             }
                                                 $(this).val("");
                                                 return false;
                                                 e.stopPropagation();
                                             });

                                             return $result.add($customSelect);
                                         },
                                         _createFilterSwitchButton: function () {
                                             return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                                         }
                                     }
                                ],
                            });

                            $("#gridImprestList").jsGrid("option", "filtering", false);
                            loadDetails();
                            function loadDetails() {
                                $.ajax({
                                    type: "GET",
                                    url: '@Url.Action("LoadImprestPaymentList", "CoreAccounts")',
                                    data: {},
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (result) {
                                        db = result;
                                        $("#gridImprestList").jsGrid({ data: db });
                                    },
                                    error: function (err) {
                                        console.log("error : " + err);
                                    }

                                });
                            }
                            @*$("#btnselectproject").click(function () {
                                var Projectid = $("#txtSelectProject").val();
                                var PIID = $("#txtSelectPI").val();
                                var IsValid = true;
                                if (!IsValid)
                                    return
                                if (Projectid == null || Projectid == 0 || Projectid == "" || Projectid == "Nothing Selected")
                                {                                  
                                        IsValid = false;
                                        $("#alert").text("Please select project");
                                        $('#Validation').modal('show');
                                        $("#txtSelectProject").focus();
                                        return false;
                                 }
                                 if (!IsValid)
                                    return
                                 if (PIID == "Select Any")
                                 {
                                        IsValid = false;
                                        $("#alert").text("Please select PI");
                                        $('#Validation').modal('show');
                                        $("#txtSelectPI").focus();
                                        return false;
                                  }
                                 if (IsValid == true) {
                                     $("#SBIPrepaidECard").show();
                                     $('#addnewpage').hide();
                                     $('#gridlist').hide();
                                     var getprojectcarddetails = 'LoadProjectCardDetails';

                                     $.ajax({
                                         type: "POST",
                                         url: getprojectcarddetails,
                                         data: { ProjectID: Projectid },
                                         //contentType: "application/json; charset=utf-8",
                                         //dataType: "json",
                                         success: function (result) {
                                             if (result.SBIEcardId > 0) {
                                                 var cardid = result.SBIEcardId;
                                                 var url = '@Url.Action("ExistingSBICard", "CoreAccounts")?CardID=' + cardid + '&ProjectId=' + Projectid;
                                                 window.location.href = url;
                                             }
                                             else if ((result.SBIEcardId == 0) && (result.PIId > 0)) {
                                                 var PI = result.PIId;
                                                 var url = '@Url.Action("ExistingPIDetails", "CoreAccounts")?PIID=' + PI + '&ProjectId=' + Projectid;
                                                 window.location.href = url;
                                             }

                                             else {
                                                 var url = '@Url.Action("SBIECard", "CoreAccounts")?ProjectId=' + Projectid;;
                                                 window.location.href = url;
                                             }

                                         }
                                     });
                                 }
                            });*@


</script>
<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
