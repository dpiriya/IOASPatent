@model IOAS.Models.FellowShipModel

@{
    ViewBag.Title = "FellowShip";
    ViewBag.Subtitle = "FellowShip List";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

<style>
    .auto-com-z-index
    {
       z-index:10000;
    }
    .your_custom_class
    {
       z-index:10000;
    }
</style>
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>FellowShip List</h3>
    </div>
    <div id="addnewpage" class="col-md-8 flt-nav-links">

        <a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
        <a href="Javascript:void(0)" id="btnaddnew" data-toggle="modal" data-target="#myModal"> <i class="ion-plus"></i>Add New</a>

    </div>
   

</div>

<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="FellowShipList">
                        @Html.HiddenFor(m => m.FellowShipId, new { @id = "fellowshipid" })
                        @Html.HiddenFor(m => m.ViewId, new { @id = "viewid" })
                        @Html.HiddenFor(m => m.EditId, new { @id = "editid" })
                        @Html.HiddenFor(m => m.ReviseId, new { @id = "reviseid" })
                        @Html.HiddenFor(m => m.ReviseEditId, new { @id = "reviseditid" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="popup"></div>

<div class="modal fade" id="myModal">
@using (Html.BeginForm("FellowShipList", "CoreAccounts", FormMethod.Post, new { @class = "", role = "form", @id = "formFellow"}))
{
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">&times;</button>
                <div class="row hd-tt-bg">
                    <div class="col-md-4">
                        <h4><b>FellowShip ref.No :</b></h4>
                        <div class="reg-no custom-reg-no">
                            @Html.DisplayFor(m => m.FellowShipNumber)
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">              
                    <div class="wrapper">                                             
                                <div class="row">
                                    <div class="page-wrapper ">
                                        <div class="col-md-12 mt30 ">
                                            <div class="row">                                              
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">Project Number</label> 
                                                        @Html.TextBoxFor(m => m.ProjectNo, new { @class = "form-control", @required = "required", @id = "projectno", @autocomplete = "off" })
                                                        @Html.TextBoxFor(m => m.ProjectId, new { @class = "form-control dis-none", @required = "required", @id = "projectid", @autocomplete = "off" }) 
                                                        @Html.ValidationMessageFor(m => m.ProjectNo)                                                
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">Payee Name</label>                                                       
                                                        @Html.TextBoxFor(m => m.UserId, new { @class = "form-control", @autocomplete = "off", @id = "userid" })
                                                        @Html.TextBoxFor(m => m.PI, new { @class = "form-control dis-none", @id = "pi", @required = "required" })                                                                                                           
                                                        @Html.HiddenFor(m => m.FellowShipId, new { @id = "fellowshipid" })
                                                        @Html.ValidationMessageFor(m => m.UserId)
                                                        
                                                    </div>
                                                </div>
                                              
                                            </div>
                                            <div class="row">                                              
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">Effective Date</label>
                                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "fromdate" })                                                    
                                                        @Html.ValidationMessageFor(m => m.FromDate)
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">DueDate</label>
                                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "todate" })                                                     
                                                    @Html.ValidationMessageFor(m => m.ToDate)
                                                    </div>
                                                </div>                                                                                             
                                            </div>
                                            <div class="row">                                              
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">Commitment Number</label>
                                                        @Html.DropDownListFor(m => m.ReviseCommitmentNo, new SelectList(ViewBag.CommitmentNumbr, "ViewBagCommitNo", "ViewBagCommitNo"), "", new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "commitmentno" })
                                                        @Html.ValidationMessageFor(m => m.ReviseCommitmentNo)
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">Balance Value</label>
                                                        @Html.TextBoxFor(m => m.AvailableBalance, new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "balancevalue", @readonly = true })
                                                    @Html.ValidationMessageFor(m => m.AvailableBalance)
                                                    </div>
                                                </div>                                             
                                                
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group">
                                                        <label class="required">FellowShip Value</label>
                                                        @Html.TextBoxFor(m => m.FellowShipValue, new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "fellowshipvalue" })
                                                        @Html.ValidationMessageFor(m => m.FellowShipValue)
                                                    </div>
                                                </div> 
                                            </div>
                                     </div>
                                    </div>
                                </div>
                            
                        
                  </div>
                 </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-8 text-center">
                                <button type="button" class="btn btn-primary text-center" data-dismiss="modal" onclick="formSave()">Submit</button>                             
                            </div>
                            <div class="col-md-2"><button type="button" class="btn btn-primary" data-dismiss="modal" onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">Close</button></div>
                        </div>
                    </div>
                </div>
    </div>
}
</div>

<div id="revisemodel" class="modal fade modal-pr-vw" role="dialog">
@using (Html.BeginForm("FellowShipList", "CoreAccounts", FormMethod.Post, new { @class = "", role = "form", @id = "formRevise" }))
{
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">&times;</button>
                <div class="row hd-tt-bg">
                    <div class="col-md-4">
                        <h4><b>FellowShip ref.No :</b></h4>
                        <div class="reg-no custom-reg-no">
                            @Html.DisplayFor(m => m.FellowShipNumber)
                        </div>
                    </div>
                </div>


            </div>
            <div class="modal-body">




                <div class="row">
                    <div class="page-wrapper">

                        <div class="col-md-12">




                            <div class="row">

                                <div class="col-md-12">
                                    <div class="bl-lg-panel-box pb-null">
                                        <div class="cmn-panel-box">
                                            <div class="row mb-md">
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group">
                                                        <label>Project Number</label>
                                                        <h4>@Html.DisplayFor(m => m.ProjectNumber)</h4>
                                                        @Html.HiddenFor(m => m.FellowShipId, new { @id = "fellowshipid" })
                                                        @Html.HiddenFor(m => m.ReviseId, new { @id = "reviseid" })
                                                        @Html.HiddenFor(m => m.ReviseEditId, new { @id = "reviseditid" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group">
                                                        <label>PI</label>
                                                        <h4>@Html.DisplayFor(m => m.PayeeName)</h4>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group mb-null">
                                                        <label>Due Date</label>   <br>
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="form-group custom-form-group mb-null">
                                                                    <label>From</label>
                                                                    <h4>@Html.DisplayFor(m => m.DueFromDate)</h4>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="form-group custom-form-group mb-null">
                                                                    <label >To</label>
                                                                    <h4>@Html.DisplayFor(m => m.DueToDate)</h4>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row mb-md">
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group">
                                                        <h4>@Html.CheckBoxFor(m => m.ReviseCheckBox1, new { @id = "revise1" })Revise</h4>                                                       
                                                        <label class="required">Due Date</label>
                                                        @Html.TextBoxFor(m => m.DueDate, new { @class = "form-control", @id = "duedate", @readonly = true, @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group">
                                                        <h4>@Html.CheckBoxFor(m => m.ReviseCheckBox2, new { @id = "revise2" })Revise</h4>
                                                       
                                                        <label class="required">New Value</label>
                                                        @Html.TextBoxFor(m => m.NewValue, new { @class = "form-control", @id = "newvalue", @readonly = true, @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group mt-lg">
                                                        <h4></h4>
                                                        <label class="required">Commitment Number</label>
                                                        @Html.DropDownListFor(m => m.ReviseCommitmentNo, new SelectList(ViewBag.CommitmentNumbr, "ViewBagCommitNo", "ViewBagCommitNo"), "", new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "commitno" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group custom-form-group mt-lg">
                                                        <h4></h4>
                                                        <label class="required">Balance Value</label>
                                                        @Html.TextBoxFor(m => m.AvailableBalance, new { @class = "form-control", @autocomplete = "off", @required = "required", @id = "balvalue", @readonly = true })
                                                    </div>
                                                </div>
                                            </div>


                                        </div>

                                    </div>
                                </div>



                            </div>

                        </div>

                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary"  data-dismiss="modal"onclick="ReviseFormSave()">Submit</button>
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">Close</button>
            </div>
        </div>

    </div>
}
</div>


<div id="revisehistorymodel" class="modal fade modal-pr-vw" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">&times;</button>
                <div class="row hd-tt-bg">
                    <div class="col-md-4">
                        <h4><b>FellowShip ref.No :</b></h4>
                        <div class="reg-no custom-reg-no">
                            @Html.DisplayFor(m => m.FellowShipNumber)
                        </div>
                    </div>
                </div>


            </div>
            <div class="modal-body">




                <div class="row">
                    <div class="page-wrapper">

                        <div class="col-md-12">




                            <div class="row">

                                <div class="col-md-4">
                                    <div class="bl-lg-panel-box pb-null">
                                        <div class="cmn-panel-box">
                                            <div class="row mb-md">
                                                <div class="col-md-12">
                                                    <div class="form-group custom-form-group">
                                                        <label>Project Number</label>
                                                        <h4>@Html.DisplayFor(m => m.ViewProjectNo)</h4>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group custom-form-group">
                                                        <label>PI</label>
                                                        <h4>@Html.DisplayFor(m => m.ViewPayeeName)</h4>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group custom-form-group">
                                                        <label>Present Duration</label><br />
                                                        <label>From:</label><br />
                                                       @Html.DisplayFor(m => m.ViewFromDate)
                                                    </div>                                                 
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group custom-form-group">  
                                                        <label>To:</label><br />                                                    
                                                        @Html.DisplayFor(m => m.ViewToDate)
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group custom-form-group">
                                                        <label>Value :</label>
                                                        @Html.DisplayFor(m => m.ViewFellowShipValue)
                                                    </div>
                                                </div>


                                            </div>




                                        </div>

                                    </div>
                                </div>

                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-12">

                                            <h3 class="mt-null mb-md">Revision History</h3>
                                            <div class="m-b-sm">
                                                <table class="table table-bordered">
                                                    <tbody>
                                                        <tr>
                                                            <td>S.No  </td>
                                                            <td>Date </td>
                                                            <td>Commitment No</td>
                                                            <td>Old Date </td>
                                                            <td>New Date </td>
                                                            <td>Old Value</td>
                                                            <td>New value</td>
                                                        </tr>
                                                        @if (Model.FellowRevision != null)
                                                        {
                                                            var count = 0;
                                                            foreach (var item in Model.FellowRevision)
                                                            {
                                                                var sino= "FellowRevision[" + count + "].Slno";
                                                                var date = "FellowRevision[" + count + "].Date";
                                                                var comitno = "FellowRevision[" + count + "].CommitNo";
                                                                var olddate = "FellowRevision[" + count + "].OldDate";
                                                                var newdate = "FellowRevision[" + count + "].NewDate";
                                                                var newvalue = "FellowRevision[" + count + "].NewValue";
                                                                var oldvalue = "FellowRevision[" + count + "].OldValue";
                                                                <tr>
                                                                    <td>                                                                      
                                                                        @*<label name="@sino">
                                                                            @item.Slno
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.Slno)
                                                                    </td>
                                                                    <td>
                                                                        @*<label name="@date">
                                                                            @item.Date
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.Date)
                                                                    </td>
                                                                    <td>                                                                      
                                                                        @*<label name="@comitno">
                                                                            @item.CommitNo
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.CommitNo)
                                                                    </td>
                                                                    <td>
                                                                        @*<label name="@olddate">
                                                                            @item.OldDate
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.OldDate)
                                                                    </td>
                                                                    <td>
                                                                        @*<label name="@newdate">
                                                                            @item.NewDate
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.NewDate)
                                                                    </td>
                                                                    <td>
                                                                        @*<label name="@oldvalue">
                                                                            @item.OldValue
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.OldValue)
                                                                    </td>
                                                                    <td>
                                                                        @*<label name="@newvalue">
                                                                            @item.NewValue
                                                                        </label>*@
                                                                        @Html.DisplayFor(m => item.NewValue)
                                                                    </td>
                                                                    
                                                                </tr>
                                                                count++;
                                                            }
                                                        }
                                                    </tbody>
                                                </table>

                                            </div>




                                        </div>

                                    </div>








                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-3 col-md-offset-6">
                                    <div class="form-group custom-form-group">
                                        <label>Commitment Number :</label>
                                        @Html.TextBoxFor(m => m.ViewCommitmentNo, new { @class = "form-control ", @readonly = true })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>Available Balance :</label>
                                        @Html.TextBoxFor(m => m.viewAvailableBalance, new { @class = "form-control ", @readonly = true })
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="window.location.href='@Url.Action("FellowShipList", "CoreAccounts")';">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="popupFilter" class="filter-popup">
    <div class="">
        <div class="filter-content">
            <div class="white-bg">
                <div class="form-group custom-form-group">
                    <h3>Filter by</h3>
                </div>
                <div id="DivCrtdDate" class="form-group custom-form-group">
                    <label class="full-width">Created Date</label>
                    @Html.TextBoxFor(m => m.SearchField.FromDate, new { @id = "FromDate", @class = "form-control half-form" })
                    @Html.TextBoxFor(m => m.SearchField.ToDate, new { @id = "ToDate", @class = "form-control half-form" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.FellowShipNumber, new { @id = "FellowShipnumber", @placeholder = "FellowShip Number", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.ProjectNumber, new { @id = "projectnumber", @placeholder = "ProjectNumber", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.Status, new { @id = "status", @placeholder = "Status", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <a id="btnReset" href="javascript:void(0)">Reset</a>
                </div>
                <div class="form-group custom-form-group text-center">
                    <button id="btnSearch" type="button" class="btn btn-primary mr10">Search</button>
                    <button name="btnClose" type="button" class="btn btn-default">Close</button>
                </div>





            </div>
        </div>

    </div>

    <a href="javascript:void(0)" name="btnClose" class="close-btn"><i class="ion-android-cancel"></i></a>

</div>
<script>

   var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';

    $("#FromDate, #ToDate").datepicker
       ({
           dateFormat: 'dd-MM-yy',
           showStatus: true,
           showWeeks: true,
           changeYear: true,
           yearRange: '-100:+0',
           highlightWeek: true,
           numberOfMonths: 1,
           showAnim: "scale",
           showOptions: {
               origin: ["top", "left"]
           }
       });
    $('a[name="btnClose"],button[name="btnClose"]').click(function () {
        $('#popupFilter').css("display", "none");
    });
    $("#btnFilter").click(function () {
        $('#popupFilter').css("display", "Block");
    });
    $('#btnSearch').on('click', function () {
        // var token = $("input[name=__RequestVerificationToken]").val();
        getData();

    });
    function ResetForm() {
        $('#FellowShipnumber').val('');
        $('#projectnumber').val('');
        $('#status').val('');
        $('#FromDate').val('');
        $('#ToDate').val('');

    }
    $('#btnReset').click(function () {
        ResetForm();
        getData();
    });

    var searchFellowURL = 'SearchFellowShipList';
    function getData() {
        var fellno = $('#FellowShipnumber').val();
        var projno = $('#projectnumber').val();
        var stat = $('#status').val();
        var FromDate = $('#FromDate').val();
        var ToDate = $('#ToDate').val();

        if (fellno == "") {
            fellno = null;
        }
        if (projno == "") {
            projno = null;
        }
        if (stat == "") {
            stat = null;
        }
        if (FromDate == "") {
            FromDate = null;
        }
        if (ToDate == "") {
            ToDate = null;
        }
        var searchdata = {
            FellowShipNumber: fellno,
            ProjectNo: projno,
            Status: stat,
            FromDate: FromDate,
            ToDate: ToDate
        };

        $.ajax({
            type: "GET",
            url: searchFellowURL,
            data: searchdata,
            dataType: "json",
            success: function (result) {
                $("#FellowShipList").jsGrid({ data: result });
                // $('#gridlist').show();
                $('#popupFilter').hide();

            },
            error: function (err) {
                console.log("error : " + err);
            }
        });

    }


    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
    });
    $('#todate, #fromdate,#duedate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true });

    $(document).on('click', '#projectno', function () {

        applyAutoComplete($('#projectno'), $('#projectid'), "../CoreAccounts/LoadProjectNumber", undefined, undefined, '1');
    });
    $(document).on('click', '#userid', function () {

        aplyAutoComplete($('#userid'), "../CoreAccounts/GetPIname");
    });
    $(document).on('click', '#revise1', function () {
        if ($(this).is(':checked')) {
            $("#duedate").prop("readonly", false);
        } else {
            $("#duedate").prop("readonly", true);
            $("#duedate").val("");
        }
    });
    $(document).on('click', '#revise2', function () {
        if ($(this).is(':checked')) {
            $("#newvalue").prop("readonly", false);
        } else {
            $("#newvalue").prop("readonly", true);
            $("#newvalue").val("");
        }
    });
    var felid = $("#fellowshipid").val();
    var viw = $("#viewid").val();
    var edi = $("#editid").val();
    var rev = $("#reviseid").val();
    var revedit= $("#reviseditid").val();
    $(document).ready(function () {
        if (felid > 0 && viw != 1 && edi != 1 && rev == 1 && revedit!=1) {
            $('#revisemodel').modal('toggle');
        }
        else if (felid > 0 && viw == 1 && edi != 1 && rev != 1 && revedit != 1) {
            $('#revisehistorymodel').modal('toggle');
        }
        else if (felid > 0 && edi == 1 && viw != 1 && rev != 1 && revedit != 1) {
            $('#myModal').modal('toggle');

        }
        else if (felid > 0 && edi != 1 && viw != 1 && rev != 1 && revedit == 1) {
            $('#revisemodel').modal('toggle');
        }
    });
    function aplyAutoComplete(ele, url) {
        $(ele).autocomplete({
            select: function (event, ui) {
                event.preventDefault();
                $(ele).val(ui.item.label);
                
                $('#pi').val(ui.item.value);
                $('#userid').val(ui.item.label);
            },
            focus: function (event, ui) {
                event.preventDefault();
                $(ele).val(ui.item.label);
            },
            source: function (request, response) {
                $.getJSON(url, { term: request.term },
                 function (locationdata) {
                     response(locationdata);
                 });
            },
            minLength: 3
        }).autocomplete("widget").addClass("your_custom_class");
        //.autocomplete("widget").addClass("your_custom_class");
    }


    $("#projectno").change(function () {
        var projid = $("#projectid").val();
        @*$.getJSON("@Url.Action("GetPIname", "CoreAccounts")", { projid: projid },
                    function (locationdata) {
                        var select = $("#pi");
                        select.empty();
                        $.each(locationdata, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.UserId,
                                text: itemData.PI
                            }));
                        });
                        select.selectpicker('refresh');
                    });*@

        $.getJSON("@Url.Action("GetCommitmentNo", "CoreAccounts")", { projid: projid },
                       function (locationdata) {
                           var select = $("#commitmentno");
                           select.empty();
                           $.each(locationdata, function (index, itemData) {
                               select.append($('<option/>', {
                                   value: itemData.ViewBagCommitNo,
                                   text: itemData.ViewBagCommitNo
                               }));
                           });
                           select.selectpicker('refresh');
                       });
    });

    $("#commitmentno").change(function () {
        var commitmentno = $(this).val();
        $.getJSON("@Url.Action("GetAvailableBalance", "CoreAccounts")", { commitmentno: commitmentno },
                         function (locationdata) {
                             var select = $("#balancevalue");
                             select.empty();
                             $("#balancevalue").val(locationdata.AvailableBalance);
                             //$.each(locationdata, function (index, itemData) {
                             //    select.append($('<option/>', {
                             //        value: itemData.AvailableBalance,
                             //        text: itemData.AvailableBalance
                             //    }));
                             //});
                             select.selectpicker('refresh');
                         });
    });

    $("#commitno").change(function () {
        var commitmentno = $(this).val();
        $.getJSON("@Url.Action("GetAvailableBalance", "CoreAccounts")", { commitmentno: commitmentno },
                         function (locationdata) {
                             var select = $("#balvalue");
                             select.empty();
                             $("#balvalue").val(locationdata.AvailableBalance);
                             //$.each(locationdata, function (index, itemData) {
                             //    select.append($('<option/>', {
                             //        value: itemData.AvailableBalance,
                             //        text: itemData.AvailableBalance
                             //    }));
                             //});
                             select.selectpicker('refresh');
                         });
    });

    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    var db;

    $("#FellowShipList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 5,
        editing: false,
        filtering: true,
        controller: {

            loadData: function (filter) {
                return $.grep(db, function (ow) {
                    return (!filter.BillNumber || ow.BillNumber.toLowerCase().indexOf(filter.BillNumber.toLowerCase()) > -1)
                   && (!filter.RequestedDate.from || new Date(ow.RequestedDate) >= filter.RequestedDate.from)
                   && (!filter.RequestedDate.to || new Date(ow.RequestedDate) <= filter.RequestedDate.to);
                });
            }

        },

        fields: [
            { name: "SlNo", title: "S.No", editing: false, width: 10 },
            { type: "number", name: "FellowShipId", title: "Id", visible: false, align: "left" },
            { type: "text", name: "FellowShipNumber", title: "FellowShip Number ", editing: false, align: "left", width: 70 },
            { type: "text", name: "PayeeName", title: "PI", editing: false, align: "left", width: 70 },
            { type: "text", name: "ProjectNumber", title: "Project Number", editing: false, align: "left", width: 70 },
            { type: "number", name: "RevisionNo", title: "No of Revisions", editing: false, align: "left", width: 70 },
            { type: "text", name: "FromDate", title: "From", editing: false, align: "left", width: 70 },
            { type: "text", name: "ToDate", title: "To", editing: false, align: "left", width: 70 },
            { name: "FellowShipValue", title: "Present value", editing: false, align: "left", width: 70 },
            { name: "Status", title: "Status", editing: false, align: "left", width: 60 },
            {
                type: "control", editButton: false, deleteButton: false, title: "Action", width: 80,
                itemTemplate: function (value, item) {
                    var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    if (item.Status == "Open") {
                        statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }, { id: "Submit for approval", name: "Submit for approval" }, { id: "View", name: "View" }]
                    } else if (item.Status == "Approval Pending") {
                        statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Approve", name: "Approve" }]
                    } else if (item.Status == "Active") {
                        statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Revise", name: "Revise" }]
                    }
                    else if (item.Status == "Revised") {
                        statusList = [{ id: "", name: "Select Action" }, { id: "RevisedEdit", name: "Edit" }, { id: "Submit for approval", name: "Submit for approval" }]
                    }
                    var $customSelect = $("<select>")
                        .attr("class", "form-control").prop("selectedIndex", "")

                    $.each(statusList, function (index, itemData) {
                        $customSelect.append($('<option/>', {

                            value: itemData.id,
                            text: itemData.name
                        }));
                    });

                    $customSelect.change(function (e) {
                        var selVal = $(this).val();
                        if (selVal == "Edit") {
                            var edit = true;
                            var url = '@Url.Action("FellowShipList", "CoreAccounts")?FellowId=' + item.FellowShipId + "&edit=" + edit;
                            window.location.href = url;
                        }
                        else if (selVal == "Submit for approval") {
                            var choice = confirm("Are you sure, Do you want to submit this bill for approval process?");
                            if (choice === true) {
                                $.ajax({
                                    type: "GET",
                                    url: '@Url.Action("ApprovalForFellowShip", "CoreAccounts")',
                                    data: {
                                        FellowId: item.FellowShipId
                                    },
                                    success: function (result) {
                                        if (result == true) {
                                            $('#alertSuccess').html("FellowShip has been submitted for approval process successfully.");
                                            $('#Success').modal('toggle');
                                            loadDetails();
                                        } else if (result == false) {
                                            $('#FailedAlert').html("Something went wrong please contact administrator");
                                            $('#Failed').modal('toggle');
                                        }
                                    },
                                    error: function (err) {
                                        console.log("error1 : " + err);
                                    }
                                });
                            }

                        }
                        else if (selVal == "View") {
                            var view = true;
                            var url = '@Url.Action("FellowShipList", "CoreAccounts")?FellowId=' + item.FellowShipId + "&view=" + view;;
                            window.location.href = url;
                        }
                        else if (selVal == "RevisedEdit") {
                            var revisededit = true;
                            var url = '@Url.Action("FellowShipList", "CoreAccounts")?FellowId=' + item.FellowShipId + "&revisededit=" + revisededit;;
                            window.location.href = url;
                        }
                        else if (selVal == "Revise") {
                            var revise = true;
                            var url = '@Url.Action("FellowShipList", "CoreAccounts")?FellowId=' + item.FellowShipId + "&revise=" + revise;
                            window.location.href = url;
                        }
                        else if (selVal == "Approve") {
                            var choice = confirm("Are you sure, Do you want to submit this bill for approval process?");
                            if (choice === true) {
                                $.ajax({
                                    type: "GET",
                                    url: '@Url.Action("ApprovalPendingForFellowShip", "CoreAccounts")',
                                    data: {
                                        FellowId: item.FellowShipId
                                    },
                                    success: function (result) {
                                        if (result == true) {
                                            $('#alertSuccess').html("FellowShip has been submitted for approval process successfully.");
                                            $('#Success').modal('toggle');
                                            loadDetails();
                                        } else if (result == false) {
                                            $('#FailedAlert').html("Something went wrong please contact administrator");
                                            $('#Failed').modal('toggle');
                                        }
                                    },
                                    error: function (err) {
                                        console.log("error1 : " + err);
                                    }
                                });
                            }
                        }
                        $(this).val("");
                        return false;
                        e.stopPropagation();
                    });

                    return $result.add($customSelect);
                },
                _createFilterSwitchButton: function () {
                    return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                }
            }


        ],

    });

    $("#FellowShipList").jsGrid("option", "filtering", false);
    loadDetails();
    function loadDetails() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetFellowShipList", "CoreAccounts")',
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                db = result;
                $("#FellowShipList").jsGrid({ data: db });
            },
            error: function (err) {
                console.log("error : " + err);
            }

        });
    }

    function formSave() {
        var isValid = true;
        var felval = parseFloat($("#fellowshipvalue").val());
        var balval = parseFloat($("#balancevalue").val());
        if (felval != "") {
            if (felval > balval)
            {
                $('#alert').html("FellowShip Value should not be greater than Commitment Available Balance");
                $('#Validation').modal('toggle');
                isValid = false;
            }
        }
        if (isValid == true) {
            $("#formFellow").submit();
        }

    }
    function ReviseFormSave() {
        var isValid = true;
        var newval = parseFloat($("#newvalue").val());
        var balval = parseFloat($("#balvalue").val());
        if (newval != "") {
            if (newval > balval)
            {
                $('#alert').html("FellowShip Value should not be greater than Commitment Available Balance");
                $('#Validation').modal('toggle');
                isValid = false;
            }
        }
        if (isValid == true) {
            $("#formRevise").submit();
        }
    }
</script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
