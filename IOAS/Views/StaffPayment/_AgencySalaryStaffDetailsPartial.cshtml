@model IOAS.Models.AgencySalaryModel

<table id="tblEmployee" class="table alter-table mb-null">
    <tbody>
        <tr>
            <th>

            </th>
            <th>
                Employee Id
            </th>
            <th>
                Name
            </th>
            <th>
                Designation
            </th>
            <th>
                Basic Salary
            </th>
            <th>
                Net Salary
            </th>

            <th>
                Action
            </th>
        </tr>
        @{
            if (Model.EmployeeDetails != null && Model.EmployeeDetails.Data.Any())
            {
                var sno = Model.EmployeeDetails.CurrentPage == 1 ? 1 : ((Model.EmployeeDetails.CurrentPage - 1) * Model.EmployeeDetails.pageSize) + 1;

                foreach (var item in Model.EmployeeDetails.Data)
                {

                    <tr>

                        <td>
                            @{
                                var Verify = "Verify_" + item.EmployeeId;
                            }
                            @*@if (item.IsVerified == true)
                            {
                                <label>@Html.CheckBoxFor(modelItem => item.IsVerified, new { @checked = "checked", @disabled = "disabled" })</label>
                            }
                            else
                            {
                                <label>@Html.CheckBoxFor(modelItem => item.IsVerified, new { @disabled = "disabled" })</label>
                            }*@
                            @sno
                            @{ 
                                sno= sno + 1;
                            }
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.EmployeeId)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.Name)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.Designation)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.BasicSalary)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.NetSalary)</label>
                        </td>


                        <td>
                            <label>
                                <button type="button" id="@Verify" class="btn btn-default" data-dismiss="modal">Verify</button>
                            </label>
                        </td>
                    </tr>

                                    }
                                }
                                else
                                {
                                    <tr class="text-center"> <td colspan="7">No data to display! </td></tr>
                                }

        }

    </tbody>
    <tfoot>
        <tr>
            <td colspan="7">
                @{
                    var maxpage = Model.EmployeeDetails.visiblePages;
                    var startpage = 1;

                    if (Model.EmployeeDetails.TotalPages < Model.EmployeeDetails.visiblePages)
                    {
                        startpage = 1;
                        maxpage = Model.EmployeeDetails.TotalPages;
                    }
                    else if (Model.EmployeeDetails.CurrentPage >= maxpage)
                    {
                        startpage = Model.EmployeeDetails.CurrentPage;

                        if (startpage + Model.EmployeeDetails.visiblePages <= Model.EmployeeDetails.TotalPages)
                        {
                            maxpage = startpage + Model.EmployeeDetails.visiblePages;
                        }
                        else
                        {
                            maxpage = Model.EmployeeDetails.TotalPages;
                        }

                        if (maxpage > Model.EmployeeDetails.TotalPages)
                        {
                            maxpage = Model.EmployeeDetails.TotalPages;
                            startpage = maxpage - (Model.EmployeeDetails.visiblePages - 1);
                        }

                    }

                    if (Model.EmployeeDetails.TotalPages > Model.EmployeeDetails.visiblePages)
                    {
                        <a id='firstPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">First</a>
                        <a id='previousPage' name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">
                            Previous
                        </a>
                    }

                    for (int i = startpage; i <= maxpage; i++)
                    {


                        if (i == Model.EmployeeDetails.CurrentPage)
                        {
                            if (Model.EmployeeDetails.TotalPages > 1)
                            {
                                <a id='currentPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">@i</a>
                            }
                        }
                        else
                        {
                            <a name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">@i</a>
                        }
                    }
                    if (Model.EmployeeDetails.TotalPages > Model.EmployeeDetails.visiblePages)
                    {
                        <a id='nextPage' name="pageButton" class="btn btn-default  btn-md" href="#" onclick="return false;">
                            Next
                        </a>
                        <a id='lastPage' name="pageButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">
                            Last
                        </a>
                    }
                }
                @{if (Model.EmployeeDetails.TotalPages > 1)
                    {
                        <h6 class="color-white" style="float: right; color: Red;">
                            Displaying page <span>@Model.EmployeeDetails.CurrentPage</span> of <span>
                                @Model.EmployeeDetails.TotalPages
                            </span>
                        </h6>
                        @Html.Hidden("TotalPages", @Model.EmployeeDetails.TotalPages)
                    }
                }
            </td>
        </tr>       
    </tfoot>

</table>


<script type="text/javascript">

    $(document).ready(function () {
        var firstpage = 1
        var currentPage = $('#currentPage').text();
        var lastpage = $('#TotalPages').val();
        if (parseInt(currentPage, 10) === parseInt(lastpage, 10)) {
            $('#lastPage').addClass('disabled');
            $('#nextPage').addClass('disabled');
        }
        else if (parseInt(currentPage, 10) === parseInt(firstpage, 10)) {
            $('#firstPage').addClass('disabled');
            $('#previousPage').addClass('disabled');
        }
    });

    $('a[name="pageButton"]').click(function () {

        var pageNo = $(this).text();

        if ($(this).text().trim() === 'First') {
            pageNo = 1;
        }
        else if ($(this).text().trim() === 'Last') {
            pageNo = $('#TotalPages').val();
        }
        else if ($(this).text().trim() === 'Previous') {
            if (parseInt($('#currentPage').text(), 10) > 1) {
                pageNo = parseInt($('#currentPage').text(), 10) - 1;
            }

        }
        else if ($(this).text().trim() === 'Next') {

            pageNo = parseInt($('#currentPage').text(), 10) + 1;
        }
        else {
            pageNo = $(this).text();
        }
        getDataEmp(pageNo)
    });

    $('[id^="Verify_"]').click(function () {
        
        var ID = $(this).attr('id');
        ID = ID.substr(ID.lastIndexOf('_') + 1);
        getEmployeeDetails(ID);
    });




</script>