@model IOAS.Models.PagedList<IOAS.Models.AdhocEmployeeModel>
<table id="tblEmployeeSelected" class="table alter-table mb-null">
    <tbody>
        <tr>
            <th>
                Verified
            </th>
            <th>
                Emp No
            </th>
            <th>
                Project No
            </th>
            <th>
                Commitment No
            </th>
            <th>
                Emp Name
            </th>
            <th>
                Dept
            </th>
            <th>
                Basic Salary
            </th>
            <th>
                Current Month Salary
            </th>
            <th>
                Mode of payment
            </th>
            <th>
                Action
            </th>
        </tr>
        @{
            if (Model != null && Model.Data != null && Model.Data.Any())
            {

                foreach (var item in Model.Data)
                {

                    @Html.HiddenFor(modelItem => item.EmployeeID)
                    @Html.HiddenFor(modelItem => item.EmployeeName)
                    @Html.HiddenFor(modelItem => item.PROJECTNO)
                    @Html.HiddenFor(modelItem => item.SalaryDetail.PaymentId)
                    @*@Html.HiddenFor(modelItem => item.SalaryDetail.PaymentHeadId)*@
                    <tr>

                        <td>
                            @{
                                if (ViewBag.AllowEdit != "disabled")
                                {
                                    <label>@Html.CheckBoxFor(modelItem => item.MakePayment)</label>
                                }
                                else
                                {
                                    <label>@Html.CheckBoxFor(modelItem => item.MakePayment, new { @disabled = "@ViewBag.AllowEdit" })</label>
                                }
                            }

                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.EmployeeID)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.PROJECTNO)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.commitmentNo)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.EmployeeName)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.DEPARTMENT)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.SalaryDetail.Basic)</label>
                        </td>
                        <td>
                            <label>@Html.DisplayFor(modelItem => item.SalaryDetail.CurrentMonthSalary)</label>
                        </td>
                        <td>
                            @*@{
                                if (ViewBag.AllowEdit != "disabled")
                                {
                                    @Html.DropDownListFor(modelItem => item.ModeOfPayment, new SelectList(ViewBag.ModeOfPayment, "CodeValAbbr", "CodeValDetail", item.ModeOfPayment), new { @class = "required form-control" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(modelItem => item.ModeOfPayment, new SelectList(ViewBag.ModeOfPayment, "CodeValAbbr", "CodeValDetail", item.ModeOfPayment), new { @class = "required form-control", @disabled = "disabled" })
                                }
                            }*@
                            @Html.DropDownListFor(modelItem => item.ModeOfPayment, new SelectList(ViewBag.ModeOfPayment, "CodeValAbbr", "CodeValDetail", item.ModeOfPayment), new { @class = "required form-control", @disabled = "disabled" })

                        </td>
                        <td>
                            @*<div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                                    Action
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <button name="btnViewModal" value="@item.EmployeeID" class="btn btn-primary" data-dismiss="modal">View</button>

                                    </li>
                                    <li>
                                        <button name="btnRemove" value="@item.EmployeeID" class="btn btn-default" onclick="SelectedEmployeeSalary(false)">Remove</button>

                                    </li>
                                </ul>
                            </div>*@

                            <label>
                                <button type="button" name="btnRemove" value="@item.EmployeeID" class="btn btn-default">Remove</button>
                            </label>
                        </td>
                    </tr>

                }
            }

        }

    </tbody>
    <tfoot>
        <tr>
            <td colspan="6">
                @{
                    var maxpage = Model.visiblePages;
                    var startpage = 1;

                    if (Model.TotalPages < Model.visiblePages)
                    {
                        startpage = 1;
                        maxpage = Model.TotalPages;
                    }
                    else if (Model.CurrentPage >= maxpage)
                    {
                        startpage = Model.CurrentPage;

                        if (startpage + Model.visiblePages <= Model.TotalPages)
                        {
                            maxpage = startpage + Model.visiblePages;
                        }
                        else
                        {
                            maxpage = Model.TotalPages;
                        }

                        if (maxpage > Model.TotalPages)
                        {
                            maxpage = Model.TotalPages;
                            startpage = maxpage - (Model.visiblePages - 1);
                        }

                    }

                    if (Model.TotalPages > Model.visiblePages)
                    {
                        <a id='firstPageSelected' name="pageSelectedButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">First</a>
                        <a id='previousPageSelected' name="pageSelectedButton" class="btn btn-default  btn-md" href="#" onclick="return false;">Prev</a>
                    }

                    for (int i = startpage; i <= maxpage; i++)
                    {


                        if (i == Model.CurrentPage)
                        {
                            <a id='currentPageSelected' name="pageSelectedButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">@i</a>
                        }
                        else
                        {
                            <a name="pageSelectedButton" class=" btn btn-default  btn-md" href="#" onclick="return false;">@i</a>
                        }
                    }
                    if (Model.TotalPages > Model.visiblePages)
                    {
                        <a id='nextPageSelected' name="pageSelectedButton" class="btn btn-default  btn-md" href="#" onclick="return false;">Next</a>
                        <a id='lastPageSelected' name="pageSelectedButton" class="btn btn-primary  btn-md" href="#" onclick="return false;">Last</a>
                    }
                }
            </td>
        </tr>
    </tfoot>
</table>

<script type="text/javascript">
    $(document).ready(function () {
        var firstpage = 1
        var lastpage = '@Model.TotalPages';
        var currentPage = $('#currentPageSelected').text();

        if (parseInt(currentPage, 10) === parseInt(lastpage, 10)) {
            $('#lastPageSelected').addClass('disabled');
            $('#nextPageSelected').addClass('disabled');
        }
        else if (parseInt(currentPage, 10) === parseInt(firstpage, 10)) {
            $('#firstPageSelected').addClass('disabled');
            $('#previousPageSelected').addClass('disabled');
        }
        $('a[name="pageSelectedButton"]').click(function () {

            var pageNo = 1;
            if ($(this).text() === 'First') {
                pageNo = 1;
            }
            else if ($(this).text() === 'Last') {
                pageNo = lastpage;
            }
            else if ($(this).attr('id') === 'previousPageSelected') {
                if (parseInt($('#currentPageSelected').text(), 10) > 1) {
                    pageNo = parseInt($('#currentPageSelected').text(), 10) - 1;
                }

            }
            else if ($(this).text() === 'Next') {

                pageNo = parseInt($('#currentPageSelected').text(), 10) + 1;
            }
            else {
                pageNo = $(this).text();
            }

            var model = {};
            getSelectedData(pageNo, model);
        });


    });


    function getSelectedData(page, model) {
        var token = $("input[name=__RequestVerificationToken]").val();
        var searchdata = { "__RequestVerificationToken": token, "page": page };

        var EmpNo = $("#hdSelectedRecord").val();
        var PaymentMonthYear = $('#PaymentMonthYear option:selected').val();
        var TypeOfPayBill = $('#TypeOfPayBill option:selected').val();
        var PaymentHeadId = $('#PaymentHeadId').val();

        var DepartmentCode = $('#DepartmentCode option:selected').val();
        var EmployeeId = $('#EmployeeId').val();
        var EmployeeName = $('#EmployeeName').val();

        var model = {};
        model.PaymentMonthYear = PaymentMonthYear;
        model.PaymentMonthYear = PaymentMonthYear;
        model.TypeOfPayBill = TypeOfPayBill;
        model.PaymentHeadId = PaymentHeadId;
        searchdata.Department = DepartmentCode;
        searchdata.EmployeeId = EmployeeId;
        searchdata.EmployeeName = EmployeeName;
        searchdata.model = model;

        $.ajax({
            url: '@Url.Action("SearchSelectedEmployee", "StaffPayment")',
            type: "POST",
            contentType: "application/x-www-form-urlencoded",
            data: searchdata,
            success: function (data) {
                $("#gridSelectedData").html(data);
                $('[name=btnRemove]').on('click', function () {
                    var EmployeeId = $(this).val();
                    console.log('EmployeeId : ',EmployeeId);
                    $("#hdSelectedRecord").val(EmployeeId);
                    RemoveEmployeeSalary(EmployeeId)
                 });
            }
        });

    }
</script>