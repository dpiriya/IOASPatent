@model IOAS.Models.OtherReceiptModel
@{
    ViewBag.Title = "Other Receipt";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

@using (Html.BeginForm("OtherReceipt", "CoreAccounts", FormMethod.Post, new { @class = "", role = "form", @id = "formRCV", enctype = "multipart/form-data" }))
{
    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>Other Receipt</b> </h4>
        </div>
    </div>
    <div class="row">
        <div class="white-bg ad-navbar">

            <div class="col-md-3 col-md-offset-9">
                <div class="reg-no custom-reg-no">
                    <div class="form-group custom-form-group">
                        <label>Number</label>
                        <h4>@Html.DisplayFor(m => m.ReceiptNumber)</h4>
                        @Html.HiddenFor(m => m.ReceiptId)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="page-wrapper">
            <div class="col-md-12 mt30">

                <div class="col-md-12 col-sm-12 m-b-sm">
                    <div class="row">
                        <div class="page-wrapper">
                            <div class="col-md-12">
                                <div class="white-bg">

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Category</label>
                                                @Html.DropDownListFor(m => m.Category, new SelectList(ViewBag.CategoryList, "id", "name"), "Select any", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Category)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Mode Of Receipt</label>
                                                @Html.DropDownListFor(m => m.ModeOfReceipt, new SelectList(ViewBag.ModeOfReceiptList, "id", "name"), "Select any", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ModeOfReceipt)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Ref. Number</label>
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Ref. Date</label>
                                                @Html.EditorFor(m => m.RefDate, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefDate)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                @Html.CheckBoxFor(m => m.IsProject)<label class="ml15">Is Project Receipt</label> <br />
                                            </div>
                                        </div>
                                        <div id="divProj" class="dis-none col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Project</label>
                                                @Html.TextBoxFor(m => m.Project, new { @class = "form-control" })
                                                @Html.TextBoxFor(m => m.ProjectId, new { @class = "form-control dis-none" })
                                                @Html.ValidationMessageFor(m => m.ProjectId)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Remarks</label>
                                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control", @rows = "3" })
                                                @Html.ValidationMessageFor(m => m.Remarks)

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Attachement</label>
                                                <input type="file" id="file" name="file">
                                                @Html.ValidationMessage("Document")
                                                <a href="@Url.Action("ShowDocument","Project",new { file = Model.DocumentName, filepath = Model.DocumentPath })" target="_blank">@Model.DocumentActualName</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Bank</label>
                                                @Html.DropDownListFor(m => m.Bank, new SelectList(ViewBag.BankList, "id", "name"), "Select any", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Bank)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Amount</label>
                                                @Html.TextBoxFor(m => m.BankAmount, new { @class = "form-control", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculateTxTotal()", @autocomplete = "off" })
                                                @Html.ValidationMessageFor(m => m.BankAmount)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="gray-bg br-rd">
                                        <h3 class="mt-null col-md-6"></h3>
                                        <div class="col-md-6 text-right mb-md">
                                            <a href="javascript:void(0)" id="btnAddExpense" class="btn btn-primary">Add New</a>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="m-b-sm">
                                                    <table class="table table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th>Account Group</th>
                                                                <th>Account Head</th>
                                                                <th>Transaction Type</th>
                                                                <th style="width:200px;">Amount</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="tbodyExpenseList">
                                                            @if (Model.ExpenseDetail != null && Model.ExpenseDetail.Count() > 0)
                                                            {
                                                                var count = 0;
                                                                foreach (var item in Model.ExpenseDetail)
                                                                {
                                                                    var accountGroup = "ExpenseDetail[" + count + "].AccountGroupId";
                                                                    var accountHead = "ExpenseDetail[" + count + "].AccountHeadId";
                                                                    var expDetailId = "ExpenseDetail[" + count + "].BillExpenseDetailId";
                                                                    var transType = "ExpenseDetail[" + count + "].TransactionType";
                                                                    var amt = "ExpenseDetail[" + count + "].Amount";
                                                                    <tr>
                                                                        <td>
                                                                            @Html.DropDownList(@accountGroup, new SelectList(ViewBag.AccountGroupList, "id", "name", item.AccountGroupId), new { @class = "form-control required" })
                                                                            @Html.ValidationMessage(@accountGroup)
                                                                            @Html.Hidden("ExpenseDetail.Index", @count)
                                                                            @Html.Hidden(@expDetailId, item.BillExpenseDetailId)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList(@accountHead, new SelectList(item.AccountHeadList, "id", "name", item.AccountHeadId), new { @class = "form-control required" })
                                                                            @Html.ValidationMessage(@accountHead)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DropDownList(@transType, new SelectList(ViewBag.TransactionTypeList, "name", "name", item.TransactionType), new { @class = "form-control required", @onchange = "CalculateTxTotal()" })
                                                                            @Html.ValidationMessage(@transType)
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBox(@amt, item.Amount, new { @class = "form-control required", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculateTxTotal()", @autocomplete = "off" })
                                                                            @Html.ValidationMessage(@amt)
                                                                        </td>
                                                                        <td>
                                                                            <a href="javascript:void(0)" class="removeExpense btn-circle"><i class="ion-close-round"></i></a>
                                                                        </td>
                                                                    </tr>
                                                                    count++;

                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td>
                                                                        @Html.DropDownList("ExpenseDetail[0].AccountGroupId", new SelectList(ViewBag.AccountGroupList, "id", "name"), "Select any", new { @class = "form-control required" })
                                                                        @Html.ValidationMessage("ExpenseDetail[0].AccountGroupId")
                                                                        @Html.Hidden("ExpenseDetail.Index", "0")
                                                                        @Html.Hidden("ExpenseDetail[0].BillExpenseDetailId")
                                                                    </td>
                                                                    <td>
                                                                        @Html.DropDownList("ExpenseDetail[0].AccountHeadId", new SelectList(ViewBag.AccountHeadList, "id", "name"), "Select any", new { @class = "form-control required" })
                                                                        @Html.ValidationMessage("ExpenseDetail[0].AccountHeadId")
                                                                    </td>
                                                                    <td>
                                                                        @Html.DropDownList("ExpenseDetail[0].TransactionType", new SelectList(ViewBag.TransactionTypeList, "name", "name"), "Select any", new { @class = "form-control required", @onchange = "CalculateTxTotal()" })
                                                                        @Html.ValidationMessage("ExpenseDetail[0].TransactionType")
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBox("ExpenseDetail[0].Amount", "", new { @class = "form-control required", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculateTxTotal()", @autocomplete = "off" })
                                                                        @Html.ValidationMessage("ExpenseDetail[0].Amount")
                                                                    </td>
                                                                    <td>
                                                                        <a href="javascript:void(0)" class="removeExpense btn-circle"><i class="ion-close-round"></i></a>
                                                                    </td>
                                                                </tr>
                                                            }


                                                        </tbody>
                                                    </table>

                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="gray-bg br-rd">
                                        <h3 class="mt-null">Taxes</h3>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="m-b-sm">
                                                    <table class="table table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th>Group</th>
                                                                <th>Account Head</th>
                                                                <th>Amount</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="tbodyDeductionList">
                                                            @if (Model.DeductionDetail != null && Model.DeductionDetail.Count() > 0)
                                                            {
                                                                var count = 0;
                                                                foreach (var item in Model.DeductionDetail)
                                                                {
                                                                    var amt = "DeductionDetail[" + count + "].Amount";
                                                                    var groupId = "DeductionDetail[" + count + "].AccountGroupId";
                                                                    var headId = "DeductionDetail[" + count + "].DeductionHeadId";
                                                                    var deductDetailId = "DeductionDetail[" + count + "].BillDeductionDetailId";
                                                                    var deductionHead = "DeductionDetail[" + count + "].DeductionHead";
                                                                    var accountGroup = "DeductionDetail[" + count + "].AccountGroup";
                                                                    <tr>
                                                                        <td>@item.AccountGroup</td>
                                                                        <td>@item.DeductionHead</td>
                                                                        <td>
                                                                            @Html.TextBox(@amt, item.Amount, new { @class = "form-control", @onkeypress = "return ValidateDecimalOnly(event)", @onblur = "CalculateTxTotal()", @autocomplete = "off" })
                                                                            @Html.Hidden(@groupId, item.AccountGroupId)
                                                                            @Html.Hidden(@headId, item.DeductionHeadId)
                                                                            @Html.Hidden(@deductDetailId, item.BillDeductionDetailId)
                                                                            @Html.Hidden(@deductionHead, item.DeductionHead)
                                                                            @Html.Hidden(@accountGroup, item.AccountGroup)
                                                                        </td>
                                                                    </tr>
                                                                    count++;

                                                                }
                                                            }
                                                        </tbody>
                                                    </table>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3  col-md-offset-6">
                                                <div class="form-group custom-form-group ">
                                                    <label>Total Credit <span class="cr">(Cr)</span> :</label>
                                                    @Html.TextBoxFor(m => m.CreditAmount, new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" })
                                                </div>
                                            </div>
                                            <div class="col-md-3 ">
                                                <div class="form-group custom-form-group ">
                                                    <label>Total Debit <span class="dr">(Dr)</span> :</label>
                                                    @Html.TextBoxFor(m => m.DebitAmount, new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-center mb-lg">
                                            <button type="submit" id="btnSave" class="btn btn-primary">Submit</button>
                                            <button type="button" class="btn btn-default" onclick="window.location.href='@Url.Action("OtherReceiptList", "CoreAccounts")';">Close</button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

}

<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var dis = '@ViewBag.disabled';
    if (dis != "") {

        $('.ion-trash-a').removeClass();
        $('#btnSave').hide();
        $('.form-control').prop('disabled', true);
        $('#ProcessStatusContainer .form-control').prop('disabled', false);
        $('input[type="file"],#btnAddExpense,.removePaymentBUDetail,.removeCrDetail').hide();
        $('.btn-circle').removeClass();
        $('.ion-close-round').removeClass();

    }
    $(document).ready(function () {
        applyAutoComplete($('#Project'), $('#ProjectId'), "@Url.Action("LoadProjectList", "CoreAccounts")");
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        if ($('#IsProject').is(':checked')) {
            $('#divProj').removeClass('dis-none');
        } else {
            $('#divProj').addClass('dis-none');
        }
        CalculateTxTotal();
    });
    $('#IsProject').click(function () {
        if ($(this).is(':checked')) {
            $('#divProj').removeClass('dis-none');
        } else {
            $('#ProjectId,#Project').val('');
            $('#divProj').addClass('dis-none');
        }
    });
    function CalculateTxTotal() {
        var ttlDrVal = parseFloat($('#BankAmount').val()) || 0;
        var ttlExpVal = 0;
        $('#tbodyExpenseList select[name$=".TransactionType"]').each(function (i, rowEle) {
            if ($(this).val() == 'Credit') {
                var parseVal = parseFloat($(this).closest('tr').find("input[name$='.Amount']").val());
                if (!isNaN(parseVal)) {
                    ttlExpVal = ttlExpVal + parseVal;
                }
            } else if ($(this).val() == 'Debit') {
                var parseVal = parseFloat($(this).closest('tr').find("input[name$='.Amount']").val());
                if (!isNaN(parseVal)) {
                    ttlDrVal = ttlDrVal + parseVal;
                }
            }
        });
        $('#tbodyDeductionList input[name$=".Amount"]').each(function (i, rowEle) {
            var parseVal = parseFloat($(this).val());
            if (!isNaN(parseVal))
                ttlExpVal = ttlExpVal + parseVal;
        });
        $('#DebitAmount').val(ttlDrVal);
        $('#CreditAmount').val(ttlExpVal);
    }
    function ValidateTransaction() {
        var msg = 'valid';
        var ttlCrAmt = parseFloat($('#CreditAmount').val()) || 0;
        var ttlDrAmt = parseFloat($('#DebitAmount').val()) || 0;
        if (ttlCrAmt != ttlDrAmt) {
            msg = 'Not a valid entry. Credit and Debit value are not equal.';
        }
        var hdList = [];
        $('#tbodyExpenseList tr').find('select[name$=".AccountHeadId"]').each(function (idx, val) {
            hdList.push($(val).val());
        });
        hdList.sort();
        for (var k = 1; k < hdList.length; ++k) {
            if (hdList[k] == hdList[k - 1]) {
                msg = "Duplicate account head exist in expense details. Please select a different head.";
            }
        }
        return msg;
    }
    $('#btnSave').click(function (e) {
        e.preventDefault();
        formSave();
    })
    function formSave() {
        var validationMsg = ValidateTransaction()
        if (validationMsg != 'valid') {
            $("#alert").text(validationMsg);
            $('#Validation').modal('show');
            return false;
        }
        var isValid = $('#formRCV').valid();
        if (!isValid)
            return false;

        $('#formRCV').submit();
    }

    $('input[name$="Amount"]').on("copy cut paste drop", function () {
        return false;
    });

    $(document).on('change', 'select[name$=".AccountGroupId"]', function () {
        var groupId = $(this).val();
        var ele = $(this).closest('tr');
        var select = ele.find("select[name$='.AccountHeadId']");
        select.empty();
        select.append($('<option/>', {
            value: "",
            text: "Select any",
        }));
        if (groupId != '') {
            $.getJSON("@Url.Action("GetAccountHead", "CoreAccounts")", { "accountGroupId": groupId, "isBank": false },
             function (locationdata) {
                 $.each(locationdata, function (index, itemData) {
                     select.append($('<option/>', {
                         value: itemData.id,
                         text: itemData.name,
                     }));
                 });
             });
        }
    });
    $('#btnAddExpense').click(function () {
        var cln = $('#tbodyExpenseList tr:first').clone().find("select,input").val("").end();
        var index = $('#tbodyExpenseList tr:last').find("input[name='ExpenseDetail.Index']").val();
        index = parseInt(index) + 1;
        $(cln).find("input[name='ExpenseDetail.Index']").val(index);
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
            $(this).attr("id", $(this).attr("id").replace(/\d+/, index));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, index));
        });

        var selectHead = $(cln).find("select[name$='.AccountHeadId']");
        selectHead.empty();
        selectHead.append($('<option/>', {
            value: "",
            text: "Select any",
        }));
        $('#tbodyExpenseList').append(cln);
    });
    $(document).on('click', 'a.removeExpense', function () {
        if ($('#tbodyExpenseList tr').length != 1) {
            $(this).closest('tr').remove();
            CalculateTxTotal();
        }
    });

</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
