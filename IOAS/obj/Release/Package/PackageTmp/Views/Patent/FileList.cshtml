@{
    ViewBag.Title = "FileList";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>File List</h3>
    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="FileList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.AntiForgeryToken()
<script type="text/javascript">
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    $(document).ready(function () {
        var statusList;
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
    });
    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    var db;
    $("#FileList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: false,
        filtering: true,
        controller: {

            loadData: function (filter) {
                return $.grep(db, function (file) {
                    return (!filter.FileNo || file.FileNo==filter.FileNo)
                        && (!filter.PrimaryInventorName || file.PrimaryInventorName.toLowerCase().indexOf(filter.PrimaryInventorName.toLowerCase()) > -1)
                        && (!filter.PIDepartment || file.PIDepartment.toLowerCase().indexOf(filter.PIDepartment.toLowerCase()) > -1)
                        && (!filter.Status || file.Status.toLowerCase().indexOf(filter.Status.toLowerCase()) > -1)
                        && (!filter.Title || file.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1);
                });
            }
        },
        fields: [
            { type: "text", name: "FileNo", title: "FileNo", editing: false, width: 80 },
            { type: "text", name: "PrimaryInventorName", title: "PI Name", editing: false },
            { type: "text", name: "PIDepartment", title: "Dept", editing: false },
            { type: "text", name: "Status", title: "Status", editing: false },
            { type: "text", name: "Title", title: "Title", editing: false },
            {
                type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

                itemTemplate: function (value, item) {
                    var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    statusList = [{ id: "", name: "Select Action" }, { id: "Edit Basic Details", name: "Edit Basic Details" },  { id: "Indian Patent", name: "Indian Patent" }, { id: "International", name: "International" }]
                     var $customSelect = $("<select>")
                         .attr("class", "form-control").prop("selectedIndex", "")
                     $.each(statusList, function (index, itemData) {
                         $customSelect.append($('<option/>', {
                                value: itemData.id,
                             text: itemData.name
                         }));
                        });
                     $customSelect.change(function (e) {
                         var selVal = $(this).val();
                         if (selVal == "Edit Basic Details") {                             
                                 var url= '@Url.Action("FCBasicDetails", "Patent")?fno=' + item.FileNo;
                                 window.location.href = url;                             
                         }
                         else if (selVal == "Indian Patent") {                             
                             var url = '@Url.Action("IndianPatent", "Patent")?fno=' + item.FileNo;
                             window.location.href = url;                                 
                         }
                         else if (selVal == "International") {
                             var url = '@Url.Action("NewInternational", "Patent")?fno=' + item.FileNo;
                             window.location.href = url;
                         }                                                      
                         $(this).val("");
                            return false;
                            e.stopPropagation();
                        });
                        return $result.add($customSelect);
                    },
                 _createFilterSwitchButton: function () {
                        return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                    }
                }
        ]
    });
    $("#FileList").jsGrid("option", "filtering", false);
    loadDetails();
    function loadDetails() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetFileList", "Patent")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                    db = result;
                    $("#FileList").jsGrid({ data: db });
            },
            error: function (err) {
                console.log("error : " + err);
            }

        });
    }

</script>


